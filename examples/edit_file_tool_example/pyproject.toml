# pyproject.toml

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "edit-file-tool"
dynamic = ["version"]
description = "A utility for editing files using Claude with the text_editor_20250124 tool and think tool capabilities, featuring intelligent prompt caching to reduce API costs by up to 53%."
readme = "EDIT_FILE_TOOL_README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
  { name = "Anthropic", email = "support@anthropic.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Text Editors",
  "Topic :: Utilities",
]

# Dependencies are inferred from the module descriptions and code snippets.
# - `cli.py` uses `click` for the command-line interface.
# - `claude_api.py` uses the `anthropic` SDK to interact with the Claude API.
dependencies = [
  "anthropic>=0.20.0",
  "click>=8.0",
  "python-dotenv>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/anthropics/edit-file-tool"
Repository = "https://github.com/anthropics/edit-file-tool.git"
"Bug Tracker" = "https://github.com/anthropics/edit-file-tool/issues"

[project.scripts]
edit-file = "edit_file_tool.cli:main"

[project.optional-dependencies]
test = [
  "pytest>=7.0",
  "pytest-asyncio",
]

[tool.hatch.version]
# The version is dynamically sourced from the __version__ variable
# in the package's __init__.py file.
path = "edit_file_tool/__init__.py"

[tool.hatch.build.targets.wheel]
# By default, hatchling includes the top-level package directory.
# This explicitly ensures only the 'edit_file_tool' package is included.
packages = ["edit_file_tool"]

[tool.hatch.build.targets.sdist]
# Exclude non-runtime files and directories from the source distribution.
exclude = [
  "/tests",
  "/examples",
  "/.github",
  "/*.log",
  "/*.md", # Exclude markdown files other than the README if any
  "EDIT_FILE_TOOL_README.md", # README is handled by the `readme` key in [project]
]